{"ast":null,"code":"var _jsxFileName = \"/home/azureuser/sotby2.0/app/src/components/RowHeader.jsx\";\nimport React from \"react\";\nimport Slot from \"./Slot\";\nimport { ReactSession } from 'react-client-session';\nimport { Stack } from \"@mui/material\";\nimport Popup from \"reactjs-popup\";\nimport RemoveUserForm from \"./RemoveUserForm\";\nexport default function RowHeader(_ref) {\n  var _this = this;\n  var position = _ref.position,\n    text = _ref.text,\n    width = _ref.width,\n    height = _ref.height,\n    removeFunction = _ref.removeFunction,\n    createCourse = _ref.createCourse,\n    viewType = _ref.viewType;\n  var header_x_span = 1;\n  if (viewType === 'years') {\n    header_x_span = 2;\n  } else if (viewType === 'months') {\n    header_x_span = 1;\n  }\n  console.log('header x span', header_x_span);\n  var createRowSlots = function createRowSlots() {\n    var slots = [];\n    for (var y = 0; y < width; y++) {\n      for (var x = 0; x < height; x++) {\n        slots.push({\n          key: text + \"x:\" + (position.x + x) + \"y:\" + (position.y + y),\n          pos: {\n            x: position.x + x,\n            y: position.y + y + header_x_span\n          }\n        });\n      }\n    }\n    return slots;\n  };\n  var createSlot = function createSlot(item, i) {\n    return /*#__PURE__*/React.createElement(Slot, {\n      key: item.key,\n      position: {\n        x: item.pos.x,\n        y: item.pos.y\n      }\n      // Rowheader has 2 rows associated with it, one that can create courses, one that can't (vacation row)\n      ,\n      createCourse: item.pos.x % 2 === 1 ? createCourse : null,\n      name: text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    });\n  };\n\n  // const [slotArray, ] = useState(createRowSlots());\n\n  var slotArray = createRowSlots();\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-row-header\",\n    style: {\n      gridArea: position.x + \" / \" + position.y + \" / span 2 / span \" + header_x_span + \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    justifyContent: 'row',\n    style: {\n      flexDirection: \"column\"\n    },\n    spacing: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"header-username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, text), /*#__PURE__*/React.createElement(Popup, {\n    trigger: ReactSession.get(\"admin\") === 1 ? /*#__PURE__*/React.createElement(\"button\", {\n      name: text + \" remove\",\n      className: \"grid-row-header-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }, \"Remove\")) : undefined,\n    modal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-row-modal-bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(RemoveUserForm, {\n    removeFunction: removeFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 31\n    }\n  }), \" \")))), slotArray.map(function (item, i) {\n    return createSlot(item, i);\n  }));\n}","map":{"version":3,"names":["React","Slot","ReactSession","Stack","Popup","RemoveUserForm","RowHeader","position","text","width","height","removeFunction","createCourse","viewType","header_x_span","console","log","createRowSlots","slots","y","x","push","key","pos","createSlot","item","i","slotArray","gridArea","flexDirection","get","undefined","map"],"sources":["/home/azureuser/sotby2.0/app/src/components/RowHeader.jsx"],"sourcesContent":["import React from \"react\";\nimport Slot from \"./Slot\";\nimport { ReactSession } from 'react-client-session';\nimport { Stack } from \"@mui/material\";\nimport Popup from \"reactjs-popup\";\nimport RemoveUserForm from \"./RemoveUserForm\";\n\nexport default function RowHeader({position, text, width, height, removeFunction, createCourse, viewType}) {\n    \n    let header_x_span = 1\n    if (viewType === 'years') {\n        header_x_span = 2\n    } else if (viewType === 'months') {\n        header_x_span = 1\n    }\n    console.log('header x span', header_x_span)\n\n    const createRowSlots = () => {\n        let slots = [];\n        \n        for(let y = 0; y < width; y++) {\n            for(let x = 0; x < height; x++) {\n                slots.push({\n                    key: text + \"x:\" + (position.x + x) + \"y:\" + (position.y + y),\n                    pos: {x: position.x + x , y: position.y + y + header_x_span},\n                });\n            }\n        }\n        return slots;\n    }\n\n    const createSlot= (item, i) => {\n        return(\n            <Slot key={item.key} position={{x: item.pos.x, y: item.pos.y}} \n            // Rowheader has 2 rows associated with it, one that can create courses, one that can't (vacation row)\n            createCourse={item.pos.x % 2 === 1 ? createCourse : null} \n            name={text}/>\n        );\n    }\n\n    // const [slotArray, ] = useState(createRowSlots());\n\n    let slotArray = createRowSlots();\n\n    return(\n        <React.Fragment>\n            <div className=\"grid-row-header\" style={{gridArea: position.x + \" / \" + position.y + \" / span 2 / span \" + header_x_span + \"\"}}>\n                <Stack justifyContent={'row'} style={{ flexDirection: \"column\"}} spacing={18}>\n                    <p className=\"header-username\">{text}</p>\n                    {\n                        <Popup trigger={\n                            ReactSession.get(\"admin\") === 1 ? \n                            <button name={text + \" remove\"} className=\"grid-row-header-close\">\n                                <p>Remove</p>\n                            </button>\n                            :\n                            undefined\n                          } modal>\n                            <div className=\"add-row-modal-bg\">\n                              <RemoveUserForm \n                                removeFunction={removeFunction}/> {/*Coordinates are based on CSS grid, needs to be offset*/}\n                            </div>\n                            \n                        </Popup>\n\n\n                    }\n                </Stack>\n            </div>\n            {slotArray.map((item, i) => {\n                return (\n                    createSlot(item, i)\n                )\n            })}\n        </React.Fragment>\n    );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,KAAK,QAAQ,eAAe;AACrC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,eAAe,SAASC,SAAS,OAA0E;EAAA;EAAA,IAAxEC,QAAQ,QAARA,QAAQ;IAAEC,IAAI,QAAJA,IAAI;IAAEC,KAAK,QAALA,KAAK;IAAEC,MAAM,QAANA,MAAM;IAAEC,cAAc,QAAdA,cAAc;IAAEC,YAAY,QAAZA,YAAY;IAAEC,QAAQ,QAARA,QAAQ;EAEpG,IAAIC,aAAa,GAAG,CAAC;EACrB,IAAID,QAAQ,KAAK,OAAO,EAAE;IACtBC,aAAa,GAAG,CAAC;EACrB,CAAC,MAAM,IAAID,QAAQ,KAAK,QAAQ,EAAE;IAC9BC,aAAa,GAAG,CAAC;EACrB;EACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,aAAa,CAAC;EAE3C,IAAMG,cAAc,GAAG,SAAjBA,cAAc,GAAS;IACzB,IAAIC,KAAK,GAAG,EAAE;IAEd,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,KAAK,EAAEU,CAAC,EAAE,EAAE;MAC3B,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAEU,CAAC,EAAE,EAAE;QAC5BF,KAAK,CAACG,IAAI,CAAC;UACPC,GAAG,EAAEd,IAAI,GAAG,IAAI,IAAID,QAAQ,CAACa,CAAC,GAAGA,CAAC,CAAC,GAAG,IAAI,IAAIb,QAAQ,CAACY,CAAC,GAAGA,CAAC,CAAC;UAC7DI,GAAG,EAAE;YAACH,CAAC,EAAEb,QAAQ,CAACa,CAAC,GAAGA,CAAC;YAAGD,CAAC,EAAEZ,QAAQ,CAACY,CAAC,GAAGA,CAAC,GAAGL;UAAa;QAC/D,CAAC,CAAC;MACN;IACJ;IACA,OAAOI,KAAK;EAChB,CAAC;EAED,IAAMM,UAAU,GAAE,SAAZA,UAAU,CAAGC,IAAI,EAAEC,CAAC,EAAK;IAC3B,oBACI,oBAAC,IAAI;MAAC,GAAG,EAAED,IAAI,CAACH,GAAI;MAAC,QAAQ,EAAE;QAACF,CAAC,EAAEK,IAAI,CAACF,GAAG,CAACH,CAAC;QAAED,CAAC,EAAEM,IAAI,CAACF,GAAG,CAACJ;MAAC;MAC5D;MAAA;MACA,YAAY,EAAEM,IAAI,CAACF,GAAG,CAACH,CAAC,GAAG,CAAC,KAAK,CAAC,GAAGR,YAAY,GAAG,IAAK;MACzD,IAAI,EAAEJ,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAE;EAErB,CAAC;;EAED;;EAEA,IAAImB,SAAS,GAAGV,cAAc,EAAE;EAEhC,oBACI,oBAAC,KAAK,CAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACX;IAAK,SAAS,EAAC,iBAAiB;IAAC,KAAK,EAAE;MAACW,QAAQ,EAAErB,QAAQ,CAACa,CAAC,GAAG,KAAK,GAAGb,QAAQ,CAACY,CAAC,GAAG,mBAAmB,GAAGL,aAAa,GAAG;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC3H,oBAAC,KAAK;IAAC,cAAc,EAAE,KAAM;IAAC,KAAK,EAAE;MAAEe,aAAa,EAAE;IAAQ,CAAE;IAAC,OAAO,EAAE,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACzE;IAAG,SAAS,EAAC,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAErB,IAAI,CAAK,eAErC,oBAAC,KAAK;IAAC,OAAO,EACVN,YAAY,CAAC4B,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,gBAC/B;MAAQ,IAAI,EAAEtB,IAAI,GAAG,SAAU;MAAC,SAAS,EAAC,uBAAuB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC7D;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,YAAa,CACR,GAETuB,SACD;IAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACL;IAAK,SAAS,EAAC,kBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC/B,oBAAC,cAAc;IACb,cAAc,EAAEpB,cAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,MAC/B,CAEF,CAIR,CACN,EACLgB,SAAS,CAACK,GAAG,CAAC,UAACP,IAAI,EAAEC,CAAC,EAAK;IACxB,OACIF,UAAU,CAACC,IAAI,EAAEC,CAAC,CAAC;EAE3B,CAAC,CAAC,CACW;AAEzB"},"metadata":{},"sourceType":"module"}