{"ast":null,"code":"var _jsxFileName = \"/home/azureuser/sotby2.0/app/src/components/Week.jsx\";\nimport React from \"react\";\nimport IconButton from '@mui/material/IconButton';\nimport Stack from '@mui/material/Stack';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\n// this code is copy paste from month.jsx. i altered it to be a week view.\nexport default function Week(_ref) {\n  var _this = this;\n  var title = _ref.title,\n    socket = _ref.socket,\n    position = _ref.position,\n    next = _ref.next,\n    previous = _ref.previous,\n    currentYear = _ref.currentYear,\n    current_date = _ref.current_date,\n    current_month = _ref.current_month,\n    setCurrentDate = _ref.setCurrentDate,\n    setCurrentMonth = _ref.setCurrentMonth,\n    setYear = _ref.setYear;\n  var weekDayNameArray = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n  var monthNameArray = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  var d2 = new Date(current_date);\n  var weeks = weekDayNameArray.map(function (element) {\n    var weekDayName = String(element + '  ' + String(d2.getDate()));\n    d2.setDate(d2.getDate() + 1);\n    return weekDayName;\n  });\n  var month_name = function month_name(current_date, current_month) {\n    var next_week_friday = new Date(current_date);\n    next_week_friday.setDate(current_date.getDate() + 4);\n    var friday_month = next_week_friday.getMonth();\n    var month_index = current_date.getMonth();\n    console.log(monthNameArray[current_month] + ' - ' + monthNameArray[0]);\n    if (friday_month != month_index) {\n      if (current_month === 11) {\n        return monthNameArray[current_month] + ' - ' + monthNameArray[0];\n      } else {\n        return monthNameArray[current_month] + ' - ' + monthNameArray[current_month + 1];\n      }\n    } else {\n      if (month_index !== month_index) {\n        if (current_month === 11) {\n          return monthNameArray[0];\n        } else {\n          return monthNameArray[current_month + 1];\n        }\n      } else {\n        return monthNameArray[current_month];\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-week\",\n    style: {\n      gridArea: position.x + \" / \" + position.y + \" / span 1 / span \" + weeks.length\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    direction: \"row\",\n    justifyContent: \"space-evenly\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"back\",\n    onClick: previous,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n    className: \"scroll-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"grid-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, month_name(current_date, current_month)), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"next\",\n    onClick: next,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n    className: \"scroll-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"grid-header\",\n    id: \"grid-header-month-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, currentYear))), weeks.map(function (item, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: title + item,\n      className: \"grid-day\",\n      style: {\n        gridArea: position.x + 1 + \" / \" + (position.y + i) + \" / span 1 / span 1\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 28\n      }\n    }, item);\n  }));\n}","map":{"version":3,"names":["React","IconButton","Stack","ArrowForwardIosIcon","ArrowBackIosIcon","useEffect","useState","Week","title","socket","position","next","previous","currentYear","current_date","current_month","setCurrentDate","setCurrentMonth","setYear","weekDayNameArray","monthNameArray","d2","Date","weeks","map","element","weekDayName","String","getDate","setDate","month_name","next_week_friday","friday_month","getMonth","month_index","console","log","gridArea","x","y","length","item","i"],"sources":["/home/azureuser/sotby2.0/app/src/components/Week.jsx"],"sourcesContent":["import React from \"react\";\nimport IconButton from '@mui/material/IconButton';\nimport Stack from '@mui/material/Stack';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport {useEffect} from 'react';\nimport { useState } from 'react';\n\n// this code is copy paste from month.jsx. i altered it to be a week view.\nexport default function Week({ title, socket, position, next, previous, currentYear, current_date, current_month, setCurrentDate, setCurrentMonth, setYear}) {\n\n    const weekDayNameArray = [\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday'\n    ]\n\n    const monthNameArray = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n    ];\n\n    let d2 = new Date(current_date)\n    const weeks = weekDayNameArray.map((element) => {\n        let weekDayName = String(element + '  ' + String(d2.getDate()))\n        d2.setDate(d2.getDate() + 1)\n        return  weekDayName\n    })\n\n    const month_name = (current_date, current_month) => {\n        let next_week_friday = new Date(current_date)\n        next_week_friday.setDate(current_date.getDate() + 4)\n        \n        const friday_month = next_week_friday.getMonth();\n        const month_index = current_date.getMonth()\n\n        console.log(monthNameArray[current_month] + ' - ' + monthNameArray[0])\n        if ( friday_month!=month_index ){\n            if (current_month ===11) {\n                return monthNameArray[current_month] + ' - ' + monthNameArray[0];\n            } else {\n                return monthNameArray[current_month] + ' - ' + monthNameArray[current_month + 1]\n            }\n        } else {\n            if (month_index !== month_index) {\n                if (current_month ===11) {\n                    return monthNameArray[0]\n                } else {\n                    return monthNameArray[current_month + 1]\n                }\n            } else {\n                return monthNameArray[current_month]\n            }\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"grid-week\" style={{gridArea: position.x + \" / \" + position.y  + \" / span 1 / span \" + weeks.length }}>\n                <Stack direction=\"row\" justifyContent=\"space-evenly\" spacing={1}>\n                    <IconButton aria-label=\"back\" onClick={previous}>\n                        <ArrowBackIosIcon className='scroll-button' />\n                    </IconButton>\n                    <h2 className=\"grid-header\">{month_name(current_date, current_month)}</h2>\n                    <IconButton aria-label=\"next\" onClick={next}>\n                        <ArrowForwardIosIcon className='scroll-button' />\n                    </IconButton>\n                    <h2 className=\"grid-header\" id=\"grid-header-month-name\">{currentYear}</h2>\n                </Stack>\n            </div>\n            {\n                weeks.map((item, i) => {\n                    return <div key={title + item} className=\"grid-day\" style={{ gridArea: (position.x + 1) + \" / \" + (position.y + i) + \" / span 1 / span 1\" }}>\n                        {item}\n                        \n                    </div>\n                })\n            }\n        </React.Fragment>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}